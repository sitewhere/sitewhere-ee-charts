# Default values for smart-city.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  pullPolicy: IfNotPresent

frontend:
  replicaCount: 1
  image:
    repository: docker.pkg.github.com/sitewhere/sitewhere-smart-city-frontend/smart-city-frontend
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  service:
    type: ClusterIP
    port: 80

backend:
  replicaCount: 1
  image:
    repository: docker.pkg.github.com/sitewhere/sitewhere-smart-city-backend/smart-city-backend
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  service:
    type: ClusterIP
    port: 8080

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: true
  smartcity:
    host: smartcity.local
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: true
  postgresqlUsername: smartcity
  postgresqlDatabase: smartcity
  existingSecret: smart-city

sitewhere:
  http:
    protocol: http
  host: demo.sitewhere.io
  port: 8080
  tenant:
    token: sc
    auth:
      token: sc0123456789
  user: admin
